# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  license-header:
    if: github.repository == 'dromara/stream-query'
    name: License header
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Check license header
        uses: apache/skywalking-eyes/header@main
  code-style:
    if: github.repository == 'dromara/stream-query'
    name: Code style
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Check codestyle
        run: ./mvnw -B -q -nsu checkstyle:check spotless:check
  dead-link:
    if: github.repository == 'dromara/stream-query'
    name: Dead links
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
      - run: sudo npm install -g markdown-link-check@3.10.3
      - run: |
          for file in $(find . -name "*.md"); do
            markdown-link-check -c .dlc.json -q "$file"
          done
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: stream-query
          MYSQL_DATABASE: stream-query
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -u stream-query --password=stream-query --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      postgres:
        image: postgres
        env:
          POSTGRES_DB: stream-query
          POSTGRES_USER: stream-query
          POSTGRES_PASSWORD: stream-query
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U stream-query"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn -B -X package --file pom.xml

      - name: Run H2 Tests (Default)
        run: mvn -B -X test

      - name: Execute MySQL schema and data scripts
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root --password=stream-query stream-query < ./stream-plugin/stream-plugin-mybatis-plus/src/test/resources/sql/mysql/schema.sql
          mysql -h 127.0.0.1 -P 3306 -u root --password=stream-query stream-query < ./stream-plugin/stream-plugin-mybatis-plus/src/test/resources/sql/mysql/data.sql
        if: success()

      - name: Run MySQL Tests
        run: mvn -B -X test -Dspring.profiles.active=mysql

      - name: Execute PostgreSQL schema and data scripts
        run: |
          PGPASSWORD=stream-query psql -h localhost -U stream-query -d stream-query -p 5432 -a -f ./stream-plugin/stream-plugin-mybatis-plus/src/test/resources/sql/pgsql/schema.sql
          PGPASSWORD=stream-query psql -h localhost -U stream-query -d stream-query -p 5432 -a -f ./stream-plugin/stream-plugin-mybatis-plus/src/test/resources/sql/pgsql/data.sql
        if: success()

      - name: Run PostgreSQL Tests
        run: mvn -B -X test -Dspring.profiles.active=pgsql
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16'
      - name: Check Dependencies Licenses
        run: |
          go install github.com/apache/skywalking-eyes/cmd/license-eye@47febf5
          license-eye dependency resolve --summary ./dist-material/release-docs/LICENSE.tpl || exit 1
          if [ ! -z "$(git diff -U0 ./dist-material/release-docs/LICENSE)" ]; then
            echo "LICENSE file is not updated correctly"
            git diff -U0 ./dist-material/release-docs/LICENSE
            exit 1
          fi
